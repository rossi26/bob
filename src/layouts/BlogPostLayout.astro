---
// src/layouts/BlogPostLayout.astro
// Layout specifically for rendering markdown blog posts.

import Layout from './Layout.astro'; // Main site layout
import { type CollectionEntry } from 'astro:content';

interface Props {
	post: CollectionEntry<'blog'>; // Type the post prop
}

const { post } = Astro.props;
const { title, description, pubDate, author, image } = post.data;

// Format date helper (same as blog index)
function formatDate(date: Date): string {
    return new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'long', day: 'numeric' }).format(date);
}

// --- Schema for BlogPosting ---
const schemaData = {
    "@type": "BlogPosting", // More specific than Article sometimes
    "headline": title,
    "description": description,
    "datePublished": pubDate.toISOString(),
    // "dateModified": Add if you track modifications
    "author": {
        "@type": "Person", // Or Organization if it's always the B&B team
        "name": author || "Redi Roma BnB Team"
    },
    "publisher": { // Link back to the main business
        "@type": "LodgingBusiness",
        "name": "Redi Roma BnB",
        "logo": { // Add logo if available
            "@type": "ImageObject",
            "url": Astro.url.origin + "/images/logo.png" // Replace with actual logo path
         },
        "url": Astro.url.origin
    },
    "image": image ? image.url : (Astro.url.origin + '/images/blog-default.jpg'), // Use post image or default
    "mainEntityOfPage": { // Link back to this page
        "@type": "WebPage",
        "@id": Astro.url.toString()
     }
    // Add keywords/tags if available: "keywords": post.data.tags?.join(', ')
};
---
<Layout title={`${title} | Redi Roma BnB Blog`} description={description} schemaType="BlogPosting" schemaData={schemaData}>
    <article class="blog-post container">
        <header class="post-header">
            {image && (
                <img src={image.url} alt={image.alt} width="800" height="400" class="post-cover-image" loading="eager" fetchpriority="high" />
            )}
            <h1 class="post-title">{title}</h1>
            <p class="post-meta">
                Published on <time datetime={pubDate.toISOString()}>{formatDate(pubDate)}</time>
                {author && ` by ${author}`}
            </p>
             {post.data.tags && post.data.tags.length > 0 && (
                <div class="post-tags header-tags">
                    {post.data.tags.map(tag => <span class="tag">{tag}</span>)}
                </div>
            )}
        </header>

        <div class="post-content prose">
            <slot />
        </div>

        <footer class="post-footer">
            <a href="/blog" class="back-link">&larr; Back to Blog Index</a>
            </footer>
    </article>
</Layout>

<style is:global>
    /* --- Blog Post Specific Styles --- */
    .blog-post {
        max-width: 800px; /* Limit content width for readability */
        padding-top: 2rem;
        padding-bottom: 3rem;
    }
    .post-header {
        margin-bottom: 2.5rem;
        text-align: center;
        border-bottom: 1px solid #eee;
        padding-bottom: 2rem;
    }
    .post-cover-image {
        max-width: 100%;
        height: auto;
        max-height: 400px; /* Limit cover image height */
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    .post-title {
        font-size: clamp(2rem, 6vw, 3rem); /* Responsive title */
        margin-bottom: 0.5rem;
        line-height: 1.2;
    }
    .post-meta {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 1rem;
    }
    .header-tags .tag { /* Style tags in header */
         background-color: color-mix(in srgb, var(--color-primary) 10%, transparent);
         color: var(--color-primary);
         font-weight: bold;
    }


    /* --- Styling for Markdown Content (Prose) --- */
    /* Add basic styling for elements generated from Markdown */
    .prose {
        font-size: 1.1rem;
        line-height: 1.8;
        color: var(--color-text-dark);
    }
    .prose > * + * { /* Add space between block elements */
        margin-top: 1.5em;
    }
    .prose h2, .prose h3, .prose h4 {
        margin-top: 2.5em;
        margin-bottom: 1em;
        line-height: 1.3;
        color: var(--color-primary);
    }
     .prose h2 { font-size: 1.8rem; border-bottom: 2px solid var(--color-primary); padding-bottom: 0.3em;}
     .prose h3 { font-size: 1.5rem; }
     .prose h4 { font-size: 1.2rem; }

    .prose p { margin-bottom: 1.5em; }
    .prose a { color: var(--color-accent); text-decoration: underline; }
    .prose a:hover { color: color-mix(in srgb, var(--color-accent) 80%, black); }
    .prose strong { font-weight: bold; color: var(--color-primary); }
    .prose em { font-style: italic; }
    .prose ul, .prose ol { margin-left: 1.5rem; margin-bottom: 1.5em; }
    .prose li { margin-bottom: 0.5em; }
    .prose blockquote {
        border-left: 4px solid var(--color-accent);
        padding-left: 1.5rem;
        margin-left: 0;
        margin-right: 0;
        font-style: italic;
        color: #555;
        background-color: color-mix(in srgb, var(--color-background) 95%, black);
        padding-top: 1rem;
        padding-bottom: 1rem;
        padding-right: 1rem;
        border-radius: 0 4px 4px 0;
    }
    .prose img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin: 2em auto; /* Center images */
        display: block;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }
    .prose code { /* Inline code */
        background-color: color-mix(in srgb, var(--color-accent) 15%, transparent);
        color: color-mix(in srgb, var(--color-accent) 90%, black);
        padding: 0.2em 0.4em;
        border-radius: 4px;
        font-size: 0.9em;
        font-family: monospace;
    }
    .prose pre { /* Code blocks */
        background-color: #2d2d2d; /* Dark background for code blocks */
        color: #f8f8f2; /* Light text */
        padding: 1.5rem;
        border-radius: 8px;
        overflow-x: auto; /* Allow horizontal scroll */
        font-family: monospace;
        font-size: 0.95rem;
        line-height: 1.6;
    }
    .prose pre code { /* Reset styles for code inside pre */
        background-color: transparent;
        color: inherit;
        padding: 0;
        border-radius: 0;
        font-size: inherit;
    }

    .post-footer {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid #eee;
        text-align: center;
    }
    .back-link {
        font-size: 0.9rem;
        color: var(--textDark);
    }
    .back-link:hover {
        color: var(--color-accent);
        text-decoration: underline;
    }
</style>

