---
// src/components/RoomCard.astro
// Reusable component to display a summary of a room.

interface Props {
	name: string;
	imageUrl: string;
	priceIndicator: string; // e.g., "From â‚¬120"
	shortDescription: string;
	features: string[]; // e.g., ['Sleeps 4', 'Kitchenette']
	detailUrl: string; // URL to the full room details page
}

const { name, imageUrl, priceIndicator, shortDescription, features, detailUrl } = Astro.props;

// Basic Schema.org markup for HotelRoom (can be expanded)
const schema = {
  "@context": "https://schema.org",
  "@type": "HotelRoom",
  "name": name,
  "description": shortDescription,
  "image": imageUrl,
  // Add more properties like occupancy, amenities etc. on the detail page
  // "potentialAction": { // Link to detail page can also be schema
  //   "@type": "ViewAction",
  //   "target": detailUrl
  // }
};
---

<article class="room-card" itemscope itemtype="https://schema.org/HotelRoom">
	<meta itemprop="name" content={name}>
	<meta itemprop="description" content={shortDescription}>
	<meta itemprop="image" content={imageUrl}>

	<div class="card-image">
		<a href={detailUrl}>
			<img src={imageUrl} alt={`Image of ${name}`} loading="lazy" onerror="this.onerror=null; this.src='https://placehold.co/600x400/EEE/CCC?text=Image+Not+Found';">
		</a>
	</div>
	<div class="card-content">
		<h3 itemprop="name"><a href={detailUrl}>{name}</a></h3>
		<p class="price">{priceIndicator}</p>
		<p class="description">{shortDescription}</p>
		<ul class="features">
			{features.map(feature => (
				<li>{feature}</li>
			))}
		</ul>
		<a href={detailUrl} class="details-link">View Details &rarr;</a>
	</div>

	<script type="application/ld+json" set:html={JSON.stringify(schema)} />
</article>

<style>
	.room-card {
		border: 1px solid #eee;
		border-radius: 8px;
		overflow: hidden;
		background-color: #fff;
		box-shadow: 0 2px 8px rgba(0,0,0,0.05);
		transition: box-shadow 0.3s ease, transform 0.3s ease;
		display: flex;
		flex-direction: column; /* Stack image and content */
	}
	.room-card:hover {
		box-shadow: 0 5px 15px rgba(0,0,0,0.1);
		transform: translateY(-5px);
	}

	.card-image img {
		width: 100%;
		height: 200px; /* Fixed height for consistency */
		object-fit: cover; /* Crop image nicely */
		border-bottom: 1px solid #eee;
	}

	.card-content {
		padding: 1.5rem;
		flex-grow: 1; /* Allow content to fill space */
		display: flex;
		flex-direction: column;
	}

	.card-content h3 {
		margin-top: 0;
		margin-bottom: 0.5rem;
		font-size: 1.4rem;
	}
	.card-content h3 a {
		color: var(--textDark); /* Use variable from Layout */
	}
	.card-content h3 a:hover {
		color: var(--brandPrimary); /* Use variable from Layout */
		text-decoration: none;
	}

	.price {
		font-weight: bold;
		color: var(--brandPrimary);
		margin-bottom: 0.75rem;
		font-size: 1.1rem;
	}

	.description {
		font-size: 0.95rem;
		margin-bottom: 1rem;
		flex-grow: 1; /* Push features/link down */
	}

	.features {
		list-style: none;
		padding: 0;
		margin-bottom: 1.5rem;
		font-size: 0.9rem;
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}
	.features li {
		background-color: #f0f0f0; /* Light background for feature tags */
		padding: 0.2rem 0.6rem;
		border-radius: 4px;
		white-space: nowrap;
	}

	.details-link {
		font-weight: bold;
		color: var(--brandPrimary);
		text-align: right; /* Align link to the right */
		margin-top: auto; /* Push to bottom */
	}
	.details-link:hover {
		text-decoration: underline;
	}
</style>
